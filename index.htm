<!DOCTYPE HTML>
<html>
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
		<title>Highcharts Example</title>

		<style type="text/css">

		</style>
	</head>
	<body>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.3/jquery.min.js"></script>
<script src="../../code/highcharts.js"></script>
<script src="../../code/modules/exporting.js"></script>

<div id="container" style="width: 1000px; height: 600px; margin: 0 auto"></div>



		<script type="text/javascript">
		
		function my_func () {
			console.log("Shivanshu Chauhan is best");
		}
		
		function my_func_1 () {
			console.log("sjsbiush");
		}
		
		$("#saas_haha").click(function() {
			console.log("Morgan Stanley");
		});

		
Highcharts.chart('container', {
    chart: {
        backgroundColor: 'white',
        events: {
            load: function () {

                // Draw the flow chart
                var ren = this.renderer,
                    colors = Highcharts.getOptions().colors,
                    rightArrow = ['M', 0, 0, 'L', 100, 0, 'L', 95, 5, 'M', 100, 0, 'L', 95, -5],
					stagingToP2IssueArrow = ['M', 293, 150, 'L', 440, 150],
					stagingToP2MarketArrow = ['M', 293, 270, 'L', 440, 270], 
					BELandingToStagingIssue = ['M', 83, 100, 'L' , 253, 100, 253, 130],
					BELandingToStagingMarket = ['M', 83 , 110 , 'L', 183, 110, 183 , 270, 230, 270],
					HILandingToStagingIssue = ['M', 83 , 218 , 'L' , 113 , 218, 113 , 150, 230, 150 ],
					HILandingToStagingMarket = ['M' , 83, 225 , 'L' , 253 , 225,253 , 250],
					HKLandingToStagingIssue = ['M', 75 , 330 , 'L' ,143 ,330 , 143,160 , 230, 160]
					HKLandingToStagingMarket = ['M', 75 , 335 , 'L' , 253, 335, 253, 295, ];



                // Headers
                ren.label('Landing', 20, 40)
                    .css({
                        fontWeight: 'bold'
                    })
                    .add();

                ren.label('Stagging', 220, 40)
                    .css({
                        fontWeight: 'bold'
                    })
                    .add();

				ren.label('P2 (Golden Copy)', 440, 40)
                    .css({
                        fontWeight: 'bold'
                    })
                    .add();

                // SaaS client label
                ren.label('Bloomberg <br/>Equity', 10, 82)
                    .attr({
                        fill: colors[0],
                        stroke: 'white',
                        'stroke-width': 2,
                        padding: 5,
                        r: 5
                    })
                    .css({
                        color: 'white'
                    })
                    .add()
					.on('click', function() {
						alert("Bloomberg Equity Clicked");
					})
                    .shadow(true);
				
				ren.label('Horizon <br/>Instrument', 10, 200)
                    .attr({
						fill: colors[2],
                        stroke: 'white',
                        'stroke-width': 2,
                        padding: 5,
                        r: 5
                    })
                    .css({
                        color: 'white'
                    })
                    .add()
					.on('click', function() {
						alert("Horizon Instrument Clicked");
					})
                    .shadow(true);

				ren.label('HK Stock', 10, 318)
                    .attr({
						fill: colors[3],
                        stroke: 'white',
                        'stroke-width': 2,
                        padding: 5,
                        r: 5
                    })
                    .css({
                        color: 'white'
                    })
                    .add()
					.on('click', function() {
						alert("HK Stock Clicked");
					})
                    .shadow(true);

				
				ren.label('Stagging <br/> Issue', 230, 130)
                    .attr({
						fill: colors[4],
                        stroke: 'white',
                        'stroke-width': 2,
                        padding: 5,
                        r: 5
                    })
                    .css({
                        color: 'white'
                    })
                    .add()
					.on('click', function() {
						alert("Stagging Issue Clicked");
					})
                    .shadow(true);
					
				ren.label('Stagging <br/> Market', 230, 250)
                    .attr({
						fill: colors[5],
                        stroke: 'white',
                        'stroke-width': 2,
                        padding: 5,
                        r: 5
                    })
                    .css({
                        color: 'white'
                    })
                    .add()
					.on('click', function() {
						alert("Stagging Market Clicked");
					})
                    .shadow(true);

				ren.label('P2 Issue<br/> Golden Copy', 440, 130)
                    .attr({
						fill: colors[4],
                        stroke: 'white',
                        'stroke-width': 2,
                        padding: 5,
                        r: 5
                    })
                    .css({
                        color: 'white'
                    })
                    .add()
					.on('click', function() {
						alert("P2 Issue Clicked");
					})
                    .shadow(true);
					
				ren.label('P2 Market <br/> Golden Copy', 440, 250)
                    .attr({
						fill: colors[5],
                        stroke: 'white',
                        'stroke-width': 2,
                        padding: 5,
                        r: 5
                    })
                    .css({
                        color: 'white'
                    })
                    .add()
					.on('click', function() {
						alert("P2 Market Clicked");
					})
                    .shadow(true);

				ren.path(stagingToP2IssueArrow)
                    .attr({
                        'stroke-width': 2,
                        stroke: colors[4]
                    })
                    .add();
					
				ren.path(stagingToP2MarketArrow)
                    .attr({
                        'stroke-width': 2,
                        stroke: colors[5]
                    })
                    .add();
				
				ren.path(BELandingToStagingIssue)
                    .attr({
                        'stroke-width': 2,
                        stroke: colors[0]
                    })
                    .add();
				
				ren.path(BELandingToStagingMarket)
                    .attr({
                        'stroke-width': 2,
                        stroke: colors[0]
                    })
                    .add();
				
				ren.path(HILandingToStagingIssue)
                    .attr({
                        'stroke-width': 2,
                        stroke: colors[2]
                    })
                    .add();
				
				ren.path(HILandingToStagingMarket)
                    .attr({
                        'stroke-width': 2,
                        stroke: colors[2]
                    })
                    .add();
				
				ren.path(HKLandingToStagingIssue)
                    .attr({
                        'stroke-width': 2,
                        stroke: colors[3]
                    })
                    .add();
				
				ren.path(HKLandingToStagingMarket)
                    .attr({
                        'stroke-width': 2,
                        stroke: colors[3]
                    })
                    .add();
				
                // Arrow from SaaS client to Phantom JS
				/*
                ren.path(rightArrow)
                    .attr({
                        'stroke-width': 2,
                        stroke: colors[3]
                    })
                    .translate(95, 95)
                    .add();
				
                ren.label('POST options in JSON', 90, 75)
                    .css({
                        fontSize: '10px',
                        color: colors[3]
                    })
                    .add();
				
                ren.label('PhantomJS', 210, 82)
                    .attr({
                        r: 5,
                        width: 100,
                        fill: colors[1]
                    })
                    .css({
                        color: 'white',
                        fontWeight: 'bold'
                    })
                    .add();

                // Arrow from Phantom JS to Batik
                ren.path(['M', 250, 110, 'L', 250, 185, 'L', 245, 180, 'M', 250, 185, 'L', 255, 180])
                    .attr({
                        'stroke-width': 2,
                        stroke: colors[3]
                    })
                    .add();

                ren.label('SVG', 255, 120)
                    .css({
                        color: colors[3],
                        fontSize: '10px'
                    })
                    .add();

                ren.label('Batik', 210, 200)
                    .attr({
                        r: 5,
                        width: 100,
                        fill: colors[1]
                    })
                    .css({
                        color: 'white',
                        fontWeight: 'bold'
                    })
                    .add();

                // Arrow from Batik to SaaS client
                ren.path(['M', 235, 185, 'L', 235, 155, 'C', 235, 130, 235, 130, 215, 130,
                          'L', 95, 130, 'L', 100, 125, 'M', 95, 130, 'L', 100, 135])
                    .attr({
                        'stroke-width': 2,
                        stroke: colors[3]
                    })
                    .add();

                ren.label('Rasterized image', 100, 110)
                    .css({
                        color: colors[3],
                        fontSize: '10px'
                    })
                    .add();
				
                // Browser label
                ren.label('Browser<br/>running<br/>Highcharts', 10, 180)
                    .attr({
                        fill: colors[0],
                        stroke: 'white',
                        'stroke-width': 2,
                        padding: 5,
                        r: 5
                    })
                    .css({
                        color: 'white',
                        width: '100px'
                    })
                    .add()
                    .shadow(true);


				
                // Arrow from Browser to Batik
                ren.path(rightArrow)
                    .attr({
                        'stroke-width': 2,
                        stroke: colors[1]
                    })
                    .translate(95, 205)
                    .add();

                ren.label('POST SVG', 110, 185)
                    .css({
                        color: colors[1],
                        fontSize: '10px'
                    })
                    .add();
				
                // Arrow from Batik to Browser
                ren.path(leftArrow)
                    .attr({
                        'stroke-width': 2,
                        stroke: colors[1]
                    })
                    .translate(95, 215)
                    .add();
				
                ren.label('Rasterized image', 100, 215)
                    .css({
                        color: colors[1],
                        fontSize: '10px'
                    })
                    .add();
				
                // Script label
                ren.label('Script', 450, 82)
                    .attr({
                        fill: colors[2],
                        stroke: 'white',
                        'stroke-width': 2,
                        padding: 5,
                        r: 5
                    })
                    .css({
                        color: 'white',
                        width: '100px'
                    })
                    .add()
                    .shadow(true);

				
                // Arrow from Script to PhantomJS
                ren.path(leftArrow)
                    .attr({
                        'stroke-width': 2,
                        stroke: colors[2]
                    })
                    .translate(330, 90)
                    .add();

                ren.label('Command', 340, 70)
                    .css({
                        color: colors[2],
                        fontSize: '10px'
                    })
                    .add();
				
                // Arrow from PhantomJS to Script
                ren.path(rightArrow)
                    .attr({
                        'stroke-width': 2,
                        stroke: colors[2]
                    })
                    .translate(330, 100)
                    .add();

                ren.label('Rasterized image', 330, 100)
                    .css({
                        color: colors[2],
                        fontSize: '10px'
                    })
                    .add();
				*/

            }
        }
    },
    title: {
        text: 'Highcharts export server overview',
        style: {
            color: 'black'
        }
    }

});
		
		</script>
	</body>
</html>
